[dir]
# Input and output data directories
FCST_GRID_STAT_INPUT_DIR = {INPUT_BASE}/satellite_step1/data/{MODEL}
OBS_GRID_STAT_INPUT_DIR = {INPUT_BASE}/satellite_step1/data/ghrsst_ncei_avhrr_anl
GRID_STAT_OUTPUT_DIR = {OUTPUT_BASE}/satellite_step1/metplus_output/make_met_data_by_{LOOP_BY}/grid_stat/ghrsst_ncei_avhrr_anl/{MODEL}
# Location of configuration files used by MET applications
CONFIG_DIR = {ENV[PARMverif_global]}/metplus_config/metplus_use_cases/METplusV{ENV[METplus_version]}/satellite/met_config/metV{ENV[MET_version]}
# Log and temporary directories
LOG_DIR = {OUTPUT_BASE}/satellite_step1/metplus_output/logs/{MODEL}
TMP_DIR = /tmp

[config]
LOG_METPLUS = {LOG_DIR}/master_metplus_satellite_step1_ghrsst_ncei_avhrr_anl_makemetdataby{LOOP_BY}_for{ENV[DATE]}_runon{CLOCK_TIME}.log
METPLUS_CONF = {OUTPUT_BASE}/satellite_step1/metplus_output/confs/{MODEL}/master_metplus_satellite_step1_ghrsst_ncei_avhrr_anl_makemetdataby{LOOP_BY}_for{ENV[DATE]}_runon{CLOCK_TIME}.conf

# Time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = {ENV[make_met_data_by]}
# Format of VALID_BEG and VALID_END
VALID_TIME_FMT = %Y%m%d%H
# Start time for METplus run
VALID_BEG = {ENV[DATE]}00
# End time for METplus run
VALID_END = {ENV[DATE]}00
# Increment between METplus runs in seconds. Must be > 60
VALID_INCREMENT = 86400

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
# specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times
# List of applications to run
PROCESS_LIST = GridStat

MODEL = {ENV[model]} 
OBTYPE = {ENV[obtype]}

FCST_NATIVE_DATA_TYPE = NETCDF
OBS_NATIVE_DATA_TYPE = NETCDF

# List of forecast leads to process
LEAD_SEQ = {ENV[fhr_list]}

# List of variables to compare
GRID_STAT_ONCE_PER_FIELD = False

FCST_VAR1_NAME = TMP_Z0_mean
FCST_VAR1_LEVELS = "(*,*)"
OBS_VAR1_NAME = analysed_sst
OBS_VAR1_LEVELS = "(0,*,*)"

FCST_VAR2_NAME = ICEC_Z0_mean
FCST_VAR2_LEVELS = "(*,*)"
FCST_VAR2_THRESH = ge{ENV[sea_ice_thresh]}, lt{ENV[sea_ice_thresh]}
FCST_VAR2_OPTIONS = cnt_thresh = [ ge{ENV[sea_ice_thresh]} ];
OBS_VAR2_NAME = sea_ice_fraction
OBS_VAR2_LEVELS = "(0,*,*)"
OBS_VAR2_THRESH = ge{ENV[sea_ice_thresh]}, lt{ENV[sea_ice_thresh]}
OBS_VAR2_OPTIONS = censor_thresh = [ lt{ENV[sea_ice_thresh]} ]; censor_val = [ -9999 ]; cnt_thresh = [ ge{ENV[sea_ice_thresh]} ]; cnt_logic = UNION;

GRID_STAT_CONFIG_FILE = {CONFIG_DIR}/GridStatConfig_ghrsst_ncei_avhrr_anl

[filename_templates]
FCST_GRID_STAT_INPUT_TEMPLATE = f{lead?fmt=%HH}.{init?fmt=%Y%m%d%H}.mean.ghrsst_ncei_avhrr_anl
OBS_GRID_STAT_INPUT_TEMPLATE = ghrsst_ncei_avhrr_anl.{valid?fmt=%Y%m%d%H} 
GRID_STAT_OUTPUT_TEMPLATE =
