#!/bin/sh

export PS4='$SECONDS + '
date
set -xa

#######################################################
# This job processes the GRID2GRID cloud verification
#######################################################
export RUN_ENVIR=${RUN_ENVIR:-nco}
export SENDECF=${SENDECF:-YES}

###############################
# Specify RUN name
###############################
export NET=verf_global
export RUN=grid2obs_step1

###############################################################
# This block can be modified for different Production test
# environment. This is used for operational testings
###############################################################
if [ "$RUN_ENVIR" = nco -o "$RUN_ENVIR" = para ] ; then
  if [ $envir != "prod" ] ; then
    export SENDDBN=${SENDDBN:-NO}
    export DBNLOG=${DBNLOG:-YES}
    export DATA_IN=${DATA_IN:-$DATAROOT}
  fi
fi

#####################################################################################
# This block is for Developer's test run:
# Run config file to get input parameters
#####################################################################################
if [ "$RUN_ENVIR" = dev ]    ### For Developers
then
  . $HOME/parm/config/config.vrfy
fi

if [ $SENDECF = YES ]
then
  ecflow_client .init=${ECF_RID}
fi

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date

##########################################################
# obtain unique process id (pid) and make temp directory
##########################################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
rm -rf $DATA
mkdir -p $DATA
cd $DATA

###########################################
# Run setpdy and initialize PDY variables
###########################################
export cycle=${cycle:-t${cyc}z}
setpdy.sh
. PDY

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z

##############################################
# Begin JOB SPECIFIC work
##############################################
export USHverif_global=$HOMEverif_global/ush
export EXECverif_global=$HOMEverif_global/exec
export PARMverif_global=$HOMEverif_global/parm
export FIXverif_global=$HOMEverif_global/fix

export DCOM=${DCOM:-$DCOMROOT/$NET}
export PCOM=${PCOM:-$PCOMROOT/$NET}
export COMIN=${COMIN:-$COMROOT/$NET/$envir/$RUN.$PDY}
export COMOUT=${COMOUT:-$COMROOT/$NET/$envir/$RUN.$PDY}
mkdir -p $COMOUT $DCOM $PCOM $GESOUT

env

# Execute the script.
msg="HAS BEGUN on $(hostname)"
postmsg "$jlogfile" "$msg"
sh $HOMEverif_global/scripts/exgrid2obs_step1.sh
status=$?
if [[ $status -ne 0 ]]; then
    exit $status
fi
##############################################
# End JOB SPECIFIC work
#############################################


##############################################
# Final processing
##############################################
msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

if [ -e "$pgmout" ]; then
    cat $pgmout
fi

##########################################
# Remove the Temporary working directory
##########################################
cd $DATAROOT
if [[ $KEEPDATA = "NO" ]]; then
    rm -rf $DATA
fi

date
